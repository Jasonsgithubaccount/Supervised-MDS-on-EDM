function one_se_all_q =one_se_rule_all_q_k_fold_acc(k_fold_acc,k_fold_std,test_acc,k)one_se_all_q = nan(size(k_fold_acc,1),11);for i = 1:size(k_fold_acc,1)[test_one_se_exa_min,test_one_se_exa_max,q_min,q_max,max_k_fold_acc, max_k_fold_std_min, max_k_fold_std_max, q_min_maxacc, q_max_maxacc, k_fold_one_se_exa_min, k_fold_one_se_exa_max]=one_se_rule_one_dim(k_fold_acc(i,:),k_fold_std(i,:),test_acc(i,:),k);one_se_all_q(i,1) = test_one_se_exa_min;one_se_all_q(i,2) = test_one_se_exa_max;one_se_all_q(i,3) = q_min;one_se_all_q(i,4) = q_max;one_se_all_q(i,5) = max_k_fold_acc;one_se_all_q(i,6) = max_k_fold_std_min;one_se_all_q(i,7) = max_k_fold_std_max;one_se_all_q(i,8) = q_min_maxacc;one_se_all_q(i,9) = q_max_maxacc;one_se_all_q(i,10) = k_fold_one_se_exa_min;one_se_all_q(i,11) = k_fold_one_se_exa_max;endendfunction [test_one_se_exa_min,test_one_se_exa_max,q_min,q_max,max_k_fold_acc, max_k_fold_std_min, max_k_fold_std_max, q_min_maxacc, q_max_maxacc, k_fold_one_se_exa_min, k_fold_one_se_exa_max]=one_se_rule_one_dim(k_fold_acc,k_fold_std,test_acc,k)max_k_fold_acc = max(k_fold_acc);col_num = find(k_fold_acc(:)==max_k_fold_acc);max_k_fold_std_min=k_fold_std(min(col_num));max_k_fold_std_max=k_fold_std(max(col_num));k_fold_one_se_exa_min = max_k_fold_acc-max_k_fold_std_min/sqrt(k);k_fold_one_se_exa_max = max_k_fold_acc-max_k_fold_std_max/sqrt(k);col_num_one_se_min = min(find(k_fold_acc(1:min(col_num))>=k_fold_one_se_exa_min));col_num_one_se_max = max(find(k_fold_acc(max(col_num)+1:end)>=k_fold_one_se_exa_max))+max(col_num);if isempty(col_num_one_se_max)    col_num_one_se_max = length(k_fold_acc);endtest_one_se_exa_min = test_acc(col_num_one_se_min);test_one_se_exa_max = test_acc(col_num_one_se_max);q_min = -2.6+0.1*col_num_one_se_min;q_max = -2.6+0.1*col_num_one_se_max;q_min_maxacc = -2.6+0.1*min(col_num);q_max_maxacc = -2.6+0.1*max(col_num);end